package Frames;

import entidades.*;
import implementaciones.*;
import interfaces.*;
import java.awt.Color;
import java.sql.Date;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import javax.swing.JOptionPane;

/**
 *
 * @author elisa
 */
public class FrmSemEtapas extends javax.swing.JFrame {

    private Date inicio, fin;
    private int semanas, id_mesociclo;
    IConexion conexion = new Conexion();
    IEtapasDAO etapasDAO = new EtapasDAO(conexion);
    /**
     * Creates new form FrmSemEtapas
     */
    public FrmSemEtapas() {
        initComponents();
    }
    
    public FrmSemEtapas(Date inicio, Date fin, int semanas, int id_mesociclo) {
        initComponents();
        this.inicio=inicio;
        this.fin=fin;
        this.semanas=semanas;
        this.id_mesociclo=id_mesociclo;
    }

    public void calcularPeriodos() {

        int eG = Integer.parseInt(txtEtapaG.getText());
        int eE = Integer.parseInt(txtEtapaE.getText());
        int eP = Integer.parseInt(txtEtapaP.getText());
        int eC = Integer.parseInt(txtEtapaC.getText());

        int pP = eG + eE;
        int pC = eP + eC;
        
        //Validacion semanas mesociclo = semanas repartidas
        if (!((pP+pC)==semanas)) {
            // Manejar el caso en el que las semanas repartidas no sean igual a las del mesociclo
            JOptionPane.showMessageDialog(this, "La cantidad de semanas del mesociclo son: "+semanas+". Debe repartirlas todas entre las etapas disponibles.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // No continuar con el proceso
        }

        // Convert java.sql.Date to LocalDate
        LocalDate inicioLocalDate = inicio.toLocalDate();

        // Calculate fin2 as inicio + 2 weeks
        LocalDate fin1LocalDate = inicioLocalDate.plus(eG, ChronoUnit.WEEKS);

        // Convert LocalDate back to java.sql.Date
        Date fin1 = Date.valueOf(fin1LocalDate);

        LocalDate fin2LocalDate = fin1LocalDate.plus(eE, ChronoUnit.WEEKS);
        Date fin2 = Date.valueOf(fin2LocalDate);
        
        LocalDate fin3LocalDate = fin2LocalDate.plus(eP, ChronoUnit.WEEKS);
        Date fin3 = Date.valueOf(fin3LocalDate);
        
        //Aqui se guardan las etapas por ahora
        boolean et=etapasDAO.agregarEtapa(inicio, fin1, eG, Tipo.General.toString(), id_mesociclo);
        boolean et2=etapasDAO.agregarEtapa(fin1, fin2, eE, Tipo.Especial.toString(), id_mesociclo);
        boolean et3=etapasDAO.agregarEtapa(fin2, fin3, eP, Tipo.Precompetitiva.toString(), id_mesociclo);
        boolean et4=etapasDAO.agregarEtapa(fin3, fin, eC, Tipo.Competitiva.toString(), id_mesociclo);

        if (et&&et2&&et3&&et4) {
            JOptionPane.showMessageDialog(this, "Se guardo la informacion de las etapas",
                    "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
            txtFieldPeriodoPrep.setText(String.valueOf(pP));
            txtFieldPeriodoCom.setText(String.valueOf(pC));
        } else {
            JOptionPane.showMessageDialog(this, "No se pudieron guardar las etapas",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        int confirmar = JOptionPane.showConfirmDialog(null, "Periodo preparatorio: " + pP+". Periodo competitivo: "+pC, "Total de semanas", JOptionPane.YES_NO_OPTION);
            if (confirmar == JOptionPane.YES_OPTION) {
                this.dispose();
                FrmElecMedios medios = new FrmElecMedios();
                medios.setVisible(true);
            }else{
            }
        
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtEtapaG = new javax.swing.JTextField();
        txtEtapaP = new javax.swing.JTextField();
        txtEtapaE = new javax.swing.JTextField();
        txtEtapaC = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFieldPeriodoPrep = new javax.swing.JTextField();
        txtFieldPeriodoCom = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JToggleButton();
        btnContinuar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 109, 182));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Etapa general");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Etapa especial");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Precompetitivo");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Competitivo");

        txtEtapaG.setForeground(new java.awt.Color(204, 204, 204));
        txtEtapaG.setText("0");
        txtEtapaG.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEtapaGFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEtapaGFocusLost(evt);
            }
        });
        txtEtapaG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEtapaGKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEtapaGKeyTyped(evt);
            }
        });

        txtEtapaP.setText("0");
        txtEtapaP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEtapaPFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEtapaPFocusLost(evt);
            }
        });
        txtEtapaP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEtapaPActionPerformed(evt);
            }
        });
        txtEtapaP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEtapaPKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEtapaPKeyTyped(evt);
            }
        });

        txtEtapaE.setText("0");
        txtEtapaE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEtapaEFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEtapaEFocusLost(evt);
            }
        });
        txtEtapaE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEtapaEActionPerformed(evt);
            }
        });
        txtEtapaE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEtapaEKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEtapaEKeyTyped(evt);
            }
        });

        txtEtapaC.setText("0");
        txtEtapaC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEtapaCFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEtapaCFocusLost(evt);
            }
        });
        txtEtapaC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEtapaCActionPerformed(evt);
            }
        });
        txtEtapaC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEtapaCKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEtapaCKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Periodo competitivo");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Periodo preparatorio");

        txtFieldPeriodoPrep.setText("0");
        txtFieldPeriodoPrep.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldPeriodoPrepFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldPeriodoPrepFocusLost(evt);
            }
        });
        txtFieldPeriodoPrep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFieldPeriodoPrepKeyTyped(evt);
            }
        });

        txtFieldPeriodoCom.setText("0");
        txtFieldPeriodoCom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFieldPeriodoComFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldPeriodoComFocusLost(evt);
            }
        });
        txtFieldPeriodoCom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFieldPeriodoComKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtEtapaG, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEtapaC, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtEtapaP, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel5))
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFieldPeriodoPrep, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFieldPeriodoCom, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtEtapaE, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEtapaG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtEtapaE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtFieldPeriodoPrep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtEtapaP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtFieldPeriodoCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEtapaC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        btnCancelar.setBackground(new java.awt.Color(0, 109, 182));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnContinuar.setBackground(new java.awt.Color(0, 109, 182));
        btnContinuar.setText("Continuar");
        btnContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinuarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(btnContinuar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(btnCancelar)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnContinuar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtEtapaPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEtapaPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEtapaPActionPerformed

    private void txtEtapaEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEtapaEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEtapaEActionPerformed

    private void txtEtapaCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEtapaCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEtapaCActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // Cambiar mas tarde paa regresar al menu o algo asi.
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtEtapaGKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEtapaGKeyTyped
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;

        if (!numeros) {
            evt.consume();
        }

        if (txtEtapaG.getText().trim().length() == 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtEtapaGKeyTyped

    private void txtEtapaEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEtapaEKeyTyped
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;

        if (!numeros) {
            evt.consume();
        }

        if (txtEtapaE.getText().trim().length() == 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtEtapaEKeyTyped

    private void txtEtapaPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEtapaPKeyTyped
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;

        if (!numeros) {
            evt.consume();
        }

        if (txtEtapaP.getText().trim().length() == 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtEtapaPKeyTyped

    private void txtEtapaCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEtapaCKeyTyped
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;

        if (!numeros) {
            evt.consume();
        }

        if (txtEtapaC.getText().trim().length() == 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtEtapaCKeyTyped

    private void txtEtapaCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEtapaCKeyReleased

    }//GEN-LAST:event_txtEtapaCKeyReleased

    private void txtEtapaPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEtapaPKeyReleased

    }//GEN-LAST:event_txtEtapaPKeyReleased

    private void txtEtapaEKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEtapaEKeyReleased

    }//GEN-LAST:event_txtEtapaEKeyReleased

    private void txtEtapaGKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEtapaGKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtEtapaGKeyReleased
    /*
    * M√©todo que funciona para quitar el "placeholder"
     */
    private void txtEtapaGFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEtapaGFocusGained
        // TODO add your handling code here:
        if (txtEtapaG.getText().equals("0")) {
            txtEtapaG.setText("");
            txtEtapaG.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtEtapaGFocusGained

    private void txtEtapaGFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEtapaGFocusLost
        // TODO add your handling code here:
        if (txtEtapaG.getText().equals("")) {
            txtEtapaG.setText("0");
            txtEtapaG.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtEtapaGFocusLost

    private void txtEtapaEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEtapaEFocusGained
        // TODO add your handling code here:
        if (txtEtapaE.getText().equals("0")) {
            txtEtapaE.setText("");
            txtEtapaE.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtEtapaEFocusGained

    private void txtEtapaEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEtapaEFocusLost
        // TODO add your handling code here:
        if (txtEtapaE.getText().equals("")) {
            txtEtapaE.setText("0");
            txtEtapaE.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtEtapaEFocusLost

    private void txtEtapaPFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEtapaPFocusGained
        // TODO add your handling code here:
        if (txtEtapaP.getText().equals("0")) {
            txtEtapaP.setText("");
            txtEtapaP.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtEtapaPFocusGained

    private void txtEtapaPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEtapaPFocusLost
        // TODO add your handling code here:
        if (txtEtapaP.getText().equals("")) {
            txtEtapaP.setText("0");
            txtEtapaP.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtEtapaPFocusLost

    private void txtEtapaCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEtapaCFocusGained
        // TODO add your handling code here:
        if (txtEtapaC.getText().equals("0")) {
            txtEtapaC.setText("");
            txtEtapaC.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtEtapaCFocusGained

    private void txtEtapaCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEtapaCFocusLost
        // TODO add your handling code here:
        if (txtEtapaC.getText().equals("")) {
            txtEtapaC.setText("0");
            txtEtapaC.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtEtapaCFocusLost

    private void btnContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinuarActionPerformed
        // TODO add your handling code here:
        //|| txtEtapaE.getText().isBlank() || txtEtapaP.getText().isBlank() || txtEtapaC.getText().isBlank() || txtFieldPeriodoCom.getText().isBlank() || txtFieldPeriodoPrep.getText().isBlank()
        if (txtEtapaG.getText().equals("0")) {
            JOptionPane.showMessageDialog(null,
                    "Es necesario llenar todos los campos requeridos",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            System.out.println("Excelente");
            this.calcularPeriodos();
        }
    }//GEN-LAST:event_btnContinuarActionPerformed

    private void txtFieldPeriodoPrepFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldPeriodoPrepFocusGained
        // TODO add your handling code here:
        if (txtFieldPeriodoPrep.getText().equals("0")) {
            txtFieldPeriodoPrep.setText("");
            txtFieldPeriodoPrep.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtFieldPeriodoPrepFocusGained

    private void txtFieldPeriodoPrepFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldPeriodoPrepFocusLost
        // TODO add your handling code here:
        if (txtFieldPeriodoPrep.getText().equals("")) {
            txtFieldPeriodoPrep.setText("0");
            txtFieldPeriodoPrep.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtFieldPeriodoPrepFocusLost

    private void txtFieldPeriodoPrepKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFieldPeriodoPrepKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;

        if (!numeros) {
            evt.consume();
        }

        if (txtFieldPeriodoPrep.getText().trim().length() == 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtFieldPeriodoPrepKeyTyped

    private void txtFieldPeriodoComFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldPeriodoComFocusGained
        // TODO add your handling code here:
        if (txtFieldPeriodoCom.getText().equals("")) {
            txtFieldPeriodoCom.setText("0");
            txtFieldPeriodoCom.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtFieldPeriodoComFocusGained

    private void txtFieldPeriodoComFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldPeriodoComFocusLost
        // TODO add your handling code here:
        if (txtFieldPeriodoPrep.getText().equals("")) {
            txtFieldPeriodoPrep.setText("0");
            txtFieldPeriodoPrep.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtFieldPeriodoComFocusLost

    private void txtFieldPeriodoComKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFieldPeriodoComKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;

        if (!numeros) {
            evt.consume();
        }

        if (txtFieldPeriodoCom.getText().trim().length() == 3) {
            evt.consume();
        }
    }//GEN-LAST:event_txtFieldPeriodoComKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmSemEtapas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmSemEtapas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmSemEtapas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmSemEtapas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmSemEtapas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnCancelar;
    private javax.swing.JButton btnContinuar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtEtapaC;
    private javax.swing.JTextField txtEtapaE;
    private javax.swing.JTextField txtEtapaG;
    private javax.swing.JTextField txtEtapaP;
    private javax.swing.JTextField txtFieldPeriodoCom;
    private javax.swing.JTextField txtFieldPeriodoPrep;
    // End of variables declaration//GEN-END:variables
}
